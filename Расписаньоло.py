from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è 1-–π (–Ω–µ—á–µ—Ç–Ω–æ–π) –∏ 2-–π (—á–µ—Ç–Ω–æ–π) –Ω–µ–¥–µ–ª–∏
schedule = {
    # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (0), –í—Ç–æ—Ä–Ω–∏–∫ (1), ..., –°—É–±–±–æ—Ç–∞ (5), –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (6)
    "odd": {  # –ù–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è (1-—è)
        0: "üìÖ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (1-—è –Ω–µ–¥–µ–ª—è):\n- –ü–† –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (10:45 - 12:15)\n- –õ–ï–ö –û—Å–Ω–æ–≤—ã –ø—Ä–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è (12:45 - 14:15)",
        1: "üìÖ –í—Ç–æ—Ä–Ω–∏–∫ (1-—è –Ω–µ–¥–µ–ª—è):\n- –ü–† –ò—Å—Ç–æ—Ä–∏—è (10:45 - 12:15)\n- –ü–† –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (12:45 - 14:15)",
        2: "üìÖ –°—Ä–µ–¥–∞ (1-—è –Ω–µ–¥–µ–ª—è):\n- –õ–ï–ö –§–∏–∑—Ä–∞ (10:45 - 12:15)\n- –õ–ï–ö –§–∏–∑–∏–∫–∞ (12:45 - 14:15)",
        3: "üìÖ –ß–µ—Ç–≤–µ—Ä–≥ (1-—è –Ω–µ–¥–µ–ª—è):\n- –õ–ï–ö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (10:45 - 12:15)\n- –ü–† –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (12:45 - 14:15)\n- –ü–† –û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è (14:30 - 16:00)\n- –õ–ê–ë –¶–∏—Ñ—Ä–æ–≤–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (16:15 - 17:45)",
        4: "üìÖ –ü—è—Ç–Ω–∏—Ü–∞ (1-—è –Ω–µ–¥–µ–ª—è):\n- –õ–ï–ö –¶–∏—Ñ—Ä–æ–≤–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (09:00 - 10:30)\n- –õ–ï–ö –ò—Å—Ç–æ—Ä–∏—è (10:45 - 12:15)\n- –õ–ï–ö –î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (12:45 - 14:15)",
        5: "üìÖ –°—É–±–±–æ—Ç–∞ (1-—è –Ω–µ–¥–µ–ª—è): –í—ã—Ö–æ–¥–Ω–æ–π üéâ",
        6: "üìÖ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (1-—è –Ω–µ–¥–µ–ª—è): –í—ã—Ö–æ–¥–Ω–æ–π üéâ"
    },
    "even": {  # –ß–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è (2-—è)
        0: "üìÖ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (2-—è –Ω–µ–¥–µ–ª—è):\n- –ü–† –û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è (10:45 - 12:15)\n- –ü–† –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (12:45 - 14:15)",
        1: "üìÖ –í—Ç–æ—Ä–Ω–∏–∫ (2-—è –Ω–µ–¥–µ–ª—è):\n- –ü–† –§–∏–∑—Ä–∞ (14:30 - 16:00)\n- –ü–† –û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è (16:15 - 17:45)",
        2: "üìÖ –°—Ä–µ–¥–∞ (2-—è –Ω–µ–¥–µ–ª—è):\n- –ü–† –§–∏–∑–∏–∫–∞ (09:00 - 10:30)\n- –õ–ï–ö –§–∏–∑–∏–∫–∞ (10:45 - 12:15)\n- –õ–ê–ë –§–∏–∑–∏–∫–∞ (12:45 - 14:15)",
        3: "üìÖ –ß–µ—Ç–≤–µ—Ä–≥ (2-—è –Ω–µ–¥–µ–ª—è):\n- –ü–† –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (10:45 - 12:15)\n- –õ–ê–ë –¶–∏—Ñ—Ä–æ–≤–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (12:15 - 14:15)\n- –ü–† –î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (14:30 - 16:00)\n- –õ–ê–ë –¶–∏—Ñ—Ä–æ–≤–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (16:15 - 17:45)",
        4: "üìÖ –ü—è—Ç–Ω–∏—Ü–∞ (2-—è –Ω–µ–¥–µ–ª—è):\n- –õ–ï–ö –ò—Å—Ç–æ—Ä–∏—è (10:45 - 12:15)\n- –õ–ï–ö –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (12:45 - 14:15)",
        5: "üìÖ –°—É–±–±–æ—Ç–∞ (2-—è –Ω–µ–¥–µ–ª—è): –í—ã—Ö–æ–¥–Ω–æ–π üéâ",
        6: "üìÖ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (2-—è –Ω–µ–¥–µ–ª—è): –í—ã—Ö–æ–¥–Ω–æ–π üéâ"
    }
}

def get_week_type():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —á–µ—Ç–Ω–∞—è –∏–ª–∏ –Ω–µ—á–µ—Ç–Ω–∞—è —Ç–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è"""
    current_week = datetime.now().isocalendar()[1]  # –ù–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –≤ –≥–æ–¥—É
    return "even" if current_week % 2 == 0 else "odd"

def get_tomorrow_schedule():
    today = datetime.now().weekday()  # –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (0-6)
    tomorrow = (today + 1) % 7       # –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∑–∞–≤—Ç—Ä–∞
    
    week_type = get_week_type()  # "odd" –∏–ª–∏ "even"
    
    if tomorrow in (5, 6):  # –°—É–±–±–æ—Ç–∞ –∏–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
        return "–ó–∞–≤—Ç—Ä–∞ –≤—ã—Ö–æ–¥–Ω–æ–π! üéâ"
    else:
        return schedule[week_type][tomorrow]

def r_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /rasp"""
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
    
    schedule_text = get_tomorrow_schedule()
    update.message.reply_text(schedule_text)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ô –¢–û–ö–ï–ù –í–ê–®–ï–ì–û –ë–û–¢–ê
    updater = Updater("TOKEN")

    dispatcher = updater.dispatcher
    dispatcher.add_handler(CommandHandler("rasp", r_command))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
